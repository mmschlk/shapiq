# A GitHub Actions workflow file to run on pull request and on main.
name: Pull Request Checks
on:
    pull_request:
    push:
        branches: [main]
    workflow_dispatch:

jobs:
    # ----------------------------------------------------------------------------------------------
    # Code Quality Checks and Linting
    # ----------------------------------------------------------------------------------------------
    check_code_quality:
        name: Code Quality Checks
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v5
            -   name: Set up Python and uv
                uses: astral-sh/setup-uv@v7
                with:
                    python-version: "3.12"
                    enable-cache: true
            -   name: Install pre-commit
                run: |
                    uv sync --only-group lint
                    uv run --no-sync pre-commit install
            -   name: Run code-quality checks
                run: uv run --no-sync pre-commit run --all-files --show-diff-on-failure
    # ----------------------------------------------------------------------------------------------
    # Install and Import Check
    # ----------------------------------------------------------------------------------------------
    install_and_import:
        name: Install and Import Check
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v5
            -   name: Set up Python and uv
                uses: astral-sh/setup-uv@v7
                with:
                    python-version: "3.12"
                    enable-cache: true
            -   name: Create uv virtual environment
                run: uv venv
            -   name: Install probly package
                run: uv run --no-sync uv pip install .
            -   name: Test import
                run: uv run --no-sync python -c "import probly; print('âœ… probly imported successfully')"
    # ----------------------------------------------------------------------------------------------
    # Unit Tests with Matrix
    # ----------------------------------------------------------------------------------------------
    run_unit_tests:
        name: Run Unit Tests
        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      python-version: "3.12"
                      dependency-group: "all_ml"
                    - os: ubuntu-latest
                      python-version: "3.12"
                      dependency-group: "torch"
                    - os: windows-latest
                      python-version: "3.12"
                      dependency-group: "all_ml"
                    - os: macos-latest
                      python-version: "3.12"
                      dependency-group: "all_ml"
        runs-on: ${{ matrix.os }}
        steps:
            -   uses: actions/checkout@v5
            -   name: Set up Python and uv
                uses: astral-sh/setup-uv@v7
                with:
                    python-version: ${{ matrix.python-version }}
                    enable-cache: true
            -   name: Install test dependencies
                run: uv sync --no-dev --group test --group ${{ matrix.dependency-group }}
            -   name: Run unit tests
                run: uv run --no-sync pytest "tests/probly" -m "not integration"
    # ----------------------------------------------------------------------------------------------
    # Test Documentation Build
    # ----------------------------------------------------------------------------------------------
    doc_build:
        name: Test Documentation Build
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v5
            -   name: Set up Python and uv
                uses: astral-sh/setup-uv@v7
                with:
                    python-version: "3.12"
                    enable-cache: true
            -   name: Install pandoc
                run: |
                    sudo apt-get update
                    sudo apt-get install -y pandoc
            -   name: Install dependencies
                run: uv sync
                # TODO(mmshlk) Turn this step to fail on warnings in the future. https://github.com/pwhofman/probly/issues/131
            -   name: Build documentation
                run: |
                    uv run sphinx-build -b html docs/source docs/build/html

    # ----------------------------------------------------------------------------------------------
    # Code Coverage
    # ----------------------------------------------------------------------------------------------
    run_coverage:
        name: Run Test Coverage
        runs-on: ubuntu-latest
        needs:
            - run_unit_tests
            - check_code_quality
            - install_and_import
        steps:
            -   uses: actions/checkout@v5
            -   name: Set up Python and uv
                uses: astral-sh/setup-uv@v7
                with:
                    python-version: "3.12"
                    enable-cache: true
            -   name: Install test dependencies
                run: uv sync --no-dev --group test --group all_ml
            -   name: Measure coverage
                run: uv run --no-sync pytest "tests/probly" --cov=probly --cov-report=xml
            -   name: Upload coverage to codecov
                uses: codecov/codecov-action@v5
                with:
                    token: ${{ secrets.CODECOV_TOKEN }}
                    fail_ci_if_error: true
