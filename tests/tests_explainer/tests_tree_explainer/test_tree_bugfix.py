"""This test module contains all tests for bugfixes regarding TreeSHAP-IQ."""

import numpy as np

from shapiq.explainer.tree import TreeSHAPIQ, TreeModel


def test_bike_bug():
    """A test for the bug denoted in GH #118. Should be fixed."""

    children_left = [
        1,
        2,
        3,
        4,
        -1,
        -1,
        7,
        -1,
        -1,
        10,
        11,
        -1,
        -1,
        14,
        -1,
        -1,
        17,
        18,
        19,
        -1,
        -1,
        22,
        -1,
        -1,
        25,
        26,
        -1,
        -1,
        29,
        -1,
        -1,
    ]
    chidren_right = [
        16,
        9,
        6,
        5,
        -1,
        -1,
        8,
        -1,
        -1,
        13,
        12,
        -1,
        -1,
        15,
        -1,
        -1,
        24,
        21,
        20,
        -1,
        -1,
        23,
        -1,
        -1,
        28,
        27,
        -1,
        -1,
        30,
        -1,
        -1,
    ]
    features = [
        0,
        0,
        0,
        10,
        -2,
        -2,
        10,
        -2,
        -2,
        10,
        2,
        -2,
        -2,
        2,
        -2,
        -2,
        1,
        6,
        5,
        -2,
        -2,
        0,
        -2,
        -2,
        6,
        0,
        -2,
        -2,
        0,
        -2,
        -2,
    ]
    thresholds = [
        -0.45833333,
        -0.54166666,
        -0.875,
        0.5,
        np.nan,
        np.nan,
        0.5,
        np.nan,
        np.nan,
        0.5,
        -0.55244875,
        np.nan,
        np.nan,
        -0.23671414,
        np.nan,
        np.nan,
        -0.03125,
        0.5,
        2.5,
        np.nan,
        np.nan,
        0.625,
        np.nan,
        np.nan,
        0.5,
        0.70833334,
        np.nan,
        np.nan,
        0.70833334,
        np.nan,
        np.nan,
    ]
    node_sample_weight = [
        13903.0,
        3996.0,
        3424.0,
        1156.0,
        375.0,
        781.0,
        2268.0,
        731.0,
        1537.0,
        572.0,
        188.0,
        72.0,
        116.0,
        384.0,
        172.0,
        212.0,
        9907.0,
        4451.0,
        2297.0,
        1540.0,
        757.0,
        2154.0,
        1636.0,
        518.0,
        5456.0,
        2640.0,
        2221.0,
        419.0,
        2816.0,
        2347.0,
        469.0,
    ]
    values = [
        190.5770697,
        31.9014014,
        24.79964953,
        43.35034602,
        79.39733333,
        26.04225352,
        15.34435626,
        23.87824897,
        11.28562134,
        74.41258741,
        18.87765957,
        9.19444444,
        24.88793103,
        101.6015625,
        71.88372093,
        125.71226415,
        254.5790855,
        177.66344642,
        127.30605137,
        101.08311688,
        180.65257596,
        231.363974,
        264.46821516,
        126.81081081,
        317.32679619,
        247.60530303,
        267.30616839,
        143.17661098,
        382.69069602,
        417.93694078,
        206.30916844,
    ]

    buggy_tree_model = {
        "children_left": np.asarray(children_left),
        "children_right": np.asarray(chidren_right),
        "empty_prediction": 190.5770,
        "features": np.asarray(features),
        "thresholds": np.asarray(thresholds),
        "node_sample_weight": np.asarray(node_sample_weight),
        "values": np.asarray(values),
    }
    tree_model: TreeModel = TreeModel(**buggy_tree_model)

    x_explain = np.asarray(
        [
            0.58333333,
            0.9375,
            0.73706148,
            -1.2,
            0.0,
            0.0,
            1.0,
            5.0,
            0.0,
            6.0,
            0.0,
            0.0,
        ]
    )

    tree_explainer = TreeSHAPIQ(model=tree_model, interaction_type="SII", max_order=2, min_order=1)
    tree_explainer.explain(x_explain)  # bug appears for node 22

    # if this test runs without an error, the bug is fixed
    assert True
    return
